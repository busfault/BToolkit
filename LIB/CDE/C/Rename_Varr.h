/*Copyright (c) 1985-2012, B-Core (UK) Ltd

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

extern int Rename_VarrP2; 
extern int Rename_Varray[];
#define INI_Rename_Varr()      {}
#define Rename_TST_IDX_ARR(bb,ii) {*(bb) = \
                         (((ii>=1) && (ii<=Rename_VarrP2))!=0);}
#define Rename_VAL_ARR(vv,ii) {*(vv) = Rename_Varray[ii];}
#define Rename_STO_ARR(ii,vv) {Rename_Varray[ii] = vv;}
#define Rename_ADD_ARR(ii,vv) {Rename_Varray[ii] = Rename_Varray[ii]+(vv);}
#define Rename_SUB_ARR(ii,vv) {Rename_Varray[ii] = Rename_Varray[ii]-(vv);}
#define Rename_MUL_ARR(ii,vv) {Rename_Varray[ii] = Rename_Varray[ii]*(vv);}
#define Rename_DIV_ARR(ii,vv) {Rename_Varray[ii] = Rename_Varray[ii]/(vv);}
#define Rename_MOD_ARR(ii,vv) \
{Rename_Varray[ii] = Rename_Varray[ii]-(vv)*(Rename_Varray[ii]/(vv));}

#define Rename_EQL_ARR(bb,ii,vv) {*(bb) = ((Rename_Varray[ii]==(vv))!=0);}
#define Rename_NEQ_ARR(bb,ii,vv) {*(bb) = ((Rename_Varray[ii]!=(vv))!=0);}
#define Rename_GTR_ARR(bb,ii,vv) {*(bb) = ((Rename_Varray[ii]> (vv))!=0);}
#define Rename_GEQ_ARR(bb,ii,vv) {*(bb) = ((Rename_Varray[ii]>=(vv))!=0);}
#define Rename_SMR_ARR(bb,ii,vv) {*(bb) = ((Rename_Varray[ii]< (vv))!=0);}
#define Rename_LEQ_ARR(bb,ii,vv) {*(bb) = ((Rename_Varray[ii]<=(vv))!=0);}

void Rename_SAV_ARR();
void Rename_SAVN_ARR();
void Rename_RST_ARR();
void Rename_RSTN_ARR();
void Rename_SWP_ARR();
void Rename_SCH_LO_EQL_ARR();
void Rename_SCH_LO_NEQ_ARR();
void Rename_SCH_HI_EQL_ARR();
void Rename_SCH_HI_NEQ_ARR();
void Rename_REV_ARR();
void Rename_RHT_ARR();
void Rename_LFT_ARR();
