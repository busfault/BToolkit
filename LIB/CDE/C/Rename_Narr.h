/*Copyright (c) 1985-2012, B-Core (UK) Ltd

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

extern int Rename_NarrP1;
extern int Rename_NarrP2;
extern int Rename_Narray[];
#define INI_Rename_Narr()      { ; }
#define Rename_TST_IDX_NARR(bb,ii) {*(bb) = \
                         (((ii>=1) && (ii<=Rename_NarrP2))!=0);}
#define Rename_VAL_NARR(vv,ii) {*(vv) = Rename_Narray[ii];}
#define Rename_STO_NARR(ii,vv) {Rename_Narray[ii] = (vv);}
#define Rename_ADD_NARR(ii,vv) {Rename_Narray[ii] = Rename_Narray[ii]+(vv);}
#define Rename_SUB_NARR(ii,vv) {Rename_Narray[ii] = Rename_Narray[ii]-(vv);}
#define Rename_MUL_NARR(ii,vv) {Rename_Narray[ii] = Rename_Narray[ii]*(vv);}
#define Rename_DIV_NARR(ii,vv) {Rename_Narray[ii] = Rename_Narray[ii]/(vv);}
#define Rename_MOD_NARR(ii,vv) \
{Rename_Narray[ii] = Rename_Narray[ii]-(vv)*(Rename_Narray[ii]/(vv));}

#define Rename_EQL_NARR(bb,ii,vv) {*(bb) = ((Rename_Narray[ii]==(vv))!=0);}
#define Rename_NEQ_NARR(bb,ii,vv) {*(bb) = ((Rename_Narray[ii]!=(vv))!=0);}
#define Rename_GTR_NARR(bb,ii,vv) {*(bb) = ((Rename_Narray[ii]> (vv))!=0);}
#define Rename_GEQ_NARR(bb,ii,vv) {*(bb) = ((Rename_Narray[ii]>=(vv))!=0);}
#define Rename_SMR_NARR(bb,ii,vv) {*(bb) = ((Rename_Narray[ii]< (vv))!=0);}
#define Rename_LEQ_NARR(bb,ii,vv) {*(bb) = ((Rename_Narray[ii]<=(vv))!=0);}

void Rename_SAV_NARR();
void Rename_SAVN_NARR();
void Rename_RST_NARR();
void Rename_RSTN_NARR();
void Rename_SWP_NARR();
void Rename_MAX_IDX_NARR();
void Rename_MIN_IDX_NARR();
void Rename_SCH_LO_EQL_NARR();
void Rename_SCH_LO_NEQ_NARR();
void Rename_SCH_LO_GEQ_NARR();
void Rename_SCH_LO_GTR_NARR();
void Rename_SCH_LO_LEQ_NARR();
void Rename_SCH_LO_SMR_NARR();
void Rename_SCH_HI_EQL_NARR();
void Rename_SCH_HI_NEQ_NARR();
void Rename_SCH_HI_GEQ_NARR();
void Rename_SCH_HI_GTR_NARR();
void Rename_SCH_HI_LEQ_NARR();
void Rename_SCH_HI_SMR_NARR();
void Rename_SRT_ASC_NARR();
void Rename_SRT_DSC_NARR();
void Rename_REV_NARR();
void Rename_RHT_NARR();
void Rename_LFT_NARR();
