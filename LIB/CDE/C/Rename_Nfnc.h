/*Copyright (c) 1985-2012, B-Core (UK) Ltd

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

extern int Rename_NfncP1;
extern int Rename_NfncP2;

extern int Rename_Nfnc[];

#define Rename_TST_FLD_NFNC(bb,ii) {*(bb) = \
                         (((ii>=1) && (ii<=Rename_NfncP2))!=0);}
#define Rename_DEF_NFNC(bb,ff) {*(bb) = (Rename_Nfnc[ff] != 2147483647)!=0;}
#define Rename_VAL_NFNC(vv,ff) {*(vv) = Rename_Nfnc[ff];}
#define Rename_STO_NFNC(ff,vv) {Rename_Nfnc[ff] = vv;}
#define Rename_RMV_NFNC(ff)    {Rename_Nfnc[ff] = 2147483647;}
#define Rename_ADD_NFNC(ff,vv) {Rename_Nfnc[ff] = Rename_Nfnc[ff]+(vv);}
#define Rename_SUB_NFNC(ff,vv) {Rename_Nfnc[ff] = Rename_Nfnc[ff]-(vv);}
#define Rename_MUL_NFNC(ff,vv) {Rename_Nfnc[ff] = Rename_Nfnc[ff]*(vv);}
#define Rename_DIV_NFNC(ff,vv) {Rename_Nfnc[ff] = Rename_Nfnc[ff]/(vv);}

#define Rename_MOD_NFNC(ff,vv) \
{Rename_Nfnc[ff] = Rename_Nfnc[ff]-(vv)*(Rename_Nfnc[ff]/(vv));}

#define Rename_EQL_NFNC(bb,ff,vv) {*(bb) = ((Rename_Nfnc[ff]==vv)!=0);}
#define Rename_NEQ_NFNC(bb,ff,vv) {*(bb) = ((Rename_Nfnc[ff]!=vv)!=0);}
#define Rename_GTR_NFNC(bb,ff,vv) {*(bb) = ((Rename_Nfnc[ff]> vv)!=0);}
#define Rename_GEQ_NFNC(bb,ff,vv) {*(bb) = ((Rename_Nfnc[ff]>=vv)!=0);}
#define Rename_SMR_NFNC(bb,ff,vv) {*(bb) = ((Rename_Nfnc[ff]< vv)!=0);}
#define Rename_LEQ_NFNC(bb,ff,vv) {*(bb) = ((Rename_Nfnc[ff]<=vv)!=0);}

void Rename_SAV_NFNC();
void Rename_SAVN_NFNC();
void Rename_RST_NFNC();
void Rename_RSTN_NFNC();
void INI_Rename_Nfnc();
void Rename_FREE_NFNC();
