/*Copyright (c) 1985-2012, B-Core (UK) Ltd

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
*/

extern int Rename_NvarP1;
extern int Rename_Nscv;

#define INI_Rename_Nvar()   {Rename_Nscv = 0;}
#define Rename_VAL_NVAR(uu) {*(uu) = Rename_Nscv;}
#define Rename_STO_NVAR(vv) {Rename_Nscv = vv;}
#define Rename_MIN_NVAR(uu,vv) {if( Rename_Nscv<=vv ){ *(uu) = Rename_Nscv ;}else{ *(uu) = vv ;};}
#define Rename_MAX_NVAR(uu,vv) {if( Rename_Nscv>=vv ){ *(uu) = Rename_Nscv ;}else{ *(uu) = vv ;};}
#define Rename_PRE_INC_NVAR(bb)   {*(bb) = \
                    ((Rename_Nscv < Rename_NvarP1)!=0);}
#define Rename_INC_NVAR()   {Rename_Nscv = Rename_Nscv+1;}

#define Rename_PRE_DEC_NVAR(bb)  {*(bb) = ((Rename_Nscv > 0)!=0);}
#define Rename_DEC_NVAR()  {Rename_Nscv = Rename_Nscv-1;}

#define Rename_PRE_ADD_NVAR(bb,vv) {*(bb) = \
                   ((vv<=Rename_NvarP1-Rename_Nscv)!=0);}
#define Rename_ADD_NVAR(vv) {Rename_Nscv = Rename_Nscv+(vv);}

#define Rename_PRE_SUB_NVAR(bb,vv) {*(bb) = ((vv<=Rename_Nscv)!=0);}
#define Rename_SUB_NVAR(vv) {Rename_Nscv = Rename_Nscv-(vv);}

#define Rename_PRE_MUL_NVAR(bb,vv) {*(bb) = \
                    ( (Rename_Nscv!=0) ? ((vv<=Rename_NvarP1/Rename_Nscv)!=0) : 1) ;} 
#define Rename_MUL_NVAR(vv) {Rename_Nscv = Rename_Nscv*(vv);}

#define Rename_PRE_DIV_NVAR(bb,vv) {*(bb) = ((vv>0)!=0);}
#define Rename_DIV_NVAR(vv) {Rename_Nscv = Rename_Nscv/(vv);}

#define Rename_PRE_MOD_NVAR(bb,vv) {*(bb) = ((vv>0)!=0);}
#define Rename_MOD_NVAR(vv) {Rename_Nscv = Rename_Nscv-(vv)*(Rename_Nscv/(vv));}

#define Rename_EQL_NVAR(bb,vv) {*(bb) = ((Rename_Nscv==vv)!=0);}
#define Rename_NEQ_NVAR(bb,vv) {*(bb) = ((Rename_Nscv!=vv)!=0);}
#define Rename_GTR_NVAR(bb,vv) {*(bb) = ((Rename_Nscv> vv)!=0);}
#define Rename_GEQ_NVAR(bb,vv) {*(bb) = ((Rename_Nscv>=vv)!=0);}
#define Rename_SMR_NVAR(bb,vv) {*(bb) = ((Rename_Nscv< vv)!=0);}
#define Rename_LEQ_NVAR(bb,vv) {*(bb) = ((Rename_Nscv<=vv)!=0);}

void Rename_SAV_NVAR();
void Rename_SAVN_NVAR();
void Rename_RST_NVAR();
void Rename_RSTN_NVAR();
