(
 (?)
 ;
 (
 (
 (?)
 )
 |
 (
 (?)
 )
 )
 )
;
(
(VHDL_PK(?):(?):((?),(?),(?)))
)
;
(?)
;
(?)
;
(?)
;
(Rename_Vec , Rename_Vec2Nat , Rename_Nat2Vec)
;
(Rename_Vec , Rename_Vec2Nat , Rename_Nat2Vec)
;
(Rename_Vec = 0..ub --> std_logic & Rename_Vec2Nat : Rename_Vec --> NAT & Rename_Nat2Vec : NAT +-> Rename_Vec & !vec.(vec : Rename_Vec => Rename_Vec2Nat(vec) = SIGMA(nn).(nn : 0..ub & vec(nn) = '1' | exp(2 , nn))) & Rename_Nat2Vec = Rename_Vec2Nat~)
;
(Rename_Vec = 0..ub --> std_logic & Rename_Vec2Nat : Rename_Vec --> NAT & Rename_Nat2Vec : NAT +-> Rename_Vec & !vec.(vec : Rename_Vec => Rename_Vec2Nat(vec) = SIGMA(nn).(nn : 0..ub & vec(nn) = '1' | exp(2 , nn))) & Rename_Nat2Vec = Rename_Vec2Nat~)
;
(?)
;
(?)
;
(Rename_vec)
;
(Rename_vec)
;
(Rename_vec : Rename_Vec)
;
(Rename_vec : Rename_Vec)
;
(?)
;
(Rename_vec :: Rename_Vec)
;
(@Rename_vecx.(Rename_vecx : Rename_Vec ==> Rename_vec := Rename_vecx))
;
(Rename_vec_STO,Rename_vec_VAL,Rename_vec_EQL,Rename_idx_MOD,Rename_idx_VAL,Rename_idx_EQL,Rename_vec_VEC2NAT,Rename_vec_NAT2VEC,Rename_vec_XTR,Rename_vec_MASK)
;
(Rename_vec_STO , Rename_vec_VAL , Rename_vec_EQL , Rename_idx_MOD , Rename_idx_VAL , Rename_idx_EQL , Rename_vec_VEC2NAT , Rename_vec_NAT2VEC , Rename_vec_XTR , Rename_vec_MASK)
;
(Rename_vector_SG(lb , ub):(lb = 0 & lb < ub & ub : NAT & lb : NAT):(?))
;
(
(
 (Rename_vec_STO)
;
 (? , Mod_Op , Det_Op , Rename_vec_STO(vec))
;
 (vec)
;
 (?)
;
 (
 (vec : Rename_Vec)
 |
 (
 (BEGIN
 Rename_vec := vec
 END)
 )
 )
;
 (
 (vec : Rename_Vec)
 |
 (
 (Rename_vec := vec)
 )
 )
)
,
(
 (Rename_vec_VAL)
;
 (? , Val_Op , Det_Op , (vec <-- Rename_vec_VAL))
;
 (?)
;
 (vec)
;
 (
 (true)
 |
 (
 (BEGIN
 vec := Rename_vec
 END)
 )
 )
;
 (
 (true)
 |
 (
 (vec := Rename_vec)
 )
 )
)
,
(
 (Rename_vec_EQL)
;
 (? , Val_Op , Det_Op , (sl <-- Rename_vec_EQL(vec)))
;
 (vec)
;
 (sl)
;
 (
 (vec : Rename_Vec)
 |
 (
 (IF vec = Rename_vec THEN
 sl := '1'
 ELSE
 sl := '0'
 END)
 )
 )
;
 (
 (vec : Rename_Vec)
 |
 (
 (
 (
 (vec = Rename_vec)
 )
 ==>
 (
 (sl := '1')
 )
 )
 []
 (
 (
 (not(vec = Rename_vec))
 )
 ==>
 (
 (sl := '0')
 )
 )
 )
 )
)
,
(
 (Rename_idx_MOD)
;
 (? , Mod_Op , Det_Op , Rename_idx_MOD(val , idx))
;
 (val , idx)
;
 (?)
;
 (
 (val : std_logic & idx : 0..ub)
 |
 (
 (BEGIN
 Rename_vec := Rename_vec <+ {idx |-> val}
 END)
 )
 )
;
 (
 (val : std_logic & idx : 0..ub)
 |
 (
 (Rename_vec := Rename_vec <+ {idx |-> val})
 )
 )
)
,
(
 (Rename_idx_VAL)
;
 (? , Val_Op , Det_Op , (val <-- Rename_idx_VAL(idx)))
;
 (idx)
;
 (val)
;
 (
 (idx : 0..ub)
 |
 (
 (BEGIN
 val := Rename_vec(idx)
 END)
 )
 )
;
 (
 (idx : 0..ub)
 |
 (
 (val := Rename_vec(idx))
 )
 )
)
,
(
 (Rename_idx_EQL)
;
 (? , Val_Op , Det_Op , (sl <-- Rename_idx_EQL(val , idx)))
;
 (val , idx)
;
 (sl)
;
 (
 (val : std_logic & idx : 0..ub)
 |
 (
 (IF val = Rename_vec(idx) THEN
 sl := '1'
 ELSE
 sl := '0'
 END)
 )
 )
;
 (
 (val : std_logic & idx : 0..ub)
 |
 (
 (
 (
 (val = Rename_vec(idx))
 )
 ==>
 (
 (sl := '1')
 )
 )
 []
 (
 (
 (not(val = Rename_vec(idx)))
 )
 ==>
 (
 (sl := '0')
 )
 )
 )
 )
)
,
(
 (Rename_vec_VEC2NAT)
;
 (? , Val_Op , Det_Op , (nn <-- Rename_vec_VEC2NAT))
;
 (?)
;
 (nn)
;
 (
 (true)
 |
 (
 (BEGIN
 nn := Rename_Vec2Nat(Rename_vec)
 END)
 )
 )
;
 (
 (true)
 |
 (
 (nn := Rename_Vec2Nat(Rename_vec))
 )
 )
)
,
(
 (Rename_vec_NAT2VEC)
;
 (? , Mod_Op , Det_Op , Rename_vec_NAT2VEC(nn))
;
 (nn)
;
 (?)
;
 (
 (nn : NAT & nn : dom(Rename_Nat2Vec))
 |
 (
 (Rename_vec := Rename_Nat2Vec(nn))
 )
 )
;
 (
 (nn : NAT & nn : dom(Rename_Nat2Vec))
 |
 (
 (Rename_vec := Rename_Nat2Vec(nn))
 )
 )
)
,
(
 (Rename_vec_XTR)
;
 (? , Val_Op , Det_Op , (vec <-- Rename_vec_XTR(lo , hi)))
;
 (lo , hi)
;
 (vec)
;
 (
 (lo : 0..ub & hi : 0..ub & lo <= hi)
 |
 (
 (vec := %nn.(nn : 0..hi-lo | Rename_vec(lo+nn)))
 )
 )
;
 (
 (lo : 0..ub & hi : 0..ub & lo <= hi)
 |
 (
 (vec := %nn.(nn : 0..hi-lo | Rename_vec(lo+nn)))
 )
 )
)
,
(
 (Rename_vec_MASK)
;
 (? , Mod_Op , Det_Op , Rename_vec_MASK(lo , hi))
;
 (lo , hi)
;
 (?)
;
 (
 (lo : 0..ub & hi : 0..ub & lo <= hi)
 |
 (
 (Rename_vec := (0..ub)*{'0'} <+ (lo..hi <| Rename_vec))
 )
 )
;
 (
 (lo : 0..ub & hi : 0..ub & lo <= hi)
 |
 (
 (Rename_vec := (0..ub)*{'0'} <+ (lo..hi <| Rename_vec))
 )
 )
)
)
